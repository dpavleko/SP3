#include <iostream>
#include <ctime>
#include "red_pokazivac.h"
//#include "red_polje.h"
using namespace std;

void sort(elem p[],int n) {
     for(int i=n-1;i>0;i--)
         for(int j=0;j<i;j++) 
             if(p[j].c>p[i].c) {
                 elem pom=p[j];
                 p[j]=p[i];
                 p[i]=pom;
             }
} 

void generiranje() {
     do {
         cout<<"Broj klijenata: ";
         cin>>n;
         } while(n<1);
     
     cout<<"\nGenerirani su:\n";
     cout<<"----------------\n";
     for(int i=0;i<n;i++) {
             elem x;
             x.a=rand()%401 + 100;
             x.b=rand()%401 + 100;
             
             if     (i==0||i==4||i==8||i==12||i==16) x.d=1;
             else if(i==1||i==5||i==9||i==13||i==17) x.d=2;
             else if(i==2||i==6||i==10||i==14||i==18) x.d=3;
             else if(i==3||i==7||i==11||i==15||i==19) x.d=4;
             else x.d=rand()%4 + 1;
             
             if(x.d==1||x.d==2) x.c=rand()%5 + 1;
             else if(x.d==4) x.c=rand()%5 + 2;
             else x.c=rand()%6 + 1;
             
             if(x.d==3) placanje++;
             switch(x.c) {
                 case 1:cout<<"umirovljenik\n";break;
                 case 2:cout<<"invalid\n";break;
                 case 3:cout<<"trudnica\n";break;
                 case 4:cout<<"VIP klijent\n";break;
                 case 5:cout<<"ostali klijent\n";break;
                 case 6:cout<<"nije klijent\n";break;
                 }                               
             EnQueueQ(x,q);
             }            
} 

void stanje_reda(red a,int n) {
     cout<<"PRIORITET\tIME I PREZIME\tDATUM RODJENJA\tTEKUCI RACUN\tDEVIZNI RACUN\n"; 
     cout<<"---------\t-------------\t--------------\t------------\t-------------\n";
     for(int i=0;i<n;i++) {
             elem x = FrontQ(a);
             switch(x.c) {
                 case 1: cout<<"1. Umirovljenik\t";break;
                 case 2: cout<<"2. Invalid\t";break;
                 case 3: cout<<"3. Trudnica\t";break;
                 case 4: cout<<"4. VIP klijent\t";break;
                 case 5: cout<<"5. Ostali\t";break;
                 case 6: cout<<"6. Nije klijent\t";break;
                 }
             cout<<x.pre_ime<<"               "<<x.datum.dan<<"."<<x.datum.mjesec<<"."<<x.datum.godina<<".\t"<<x.tekuci<<" HRK"<<"\t        "<<x.devizni<<" GBP"<<endl;
             DeQueueQ(a);
             EnQueueQ(x,a);
             }
}
     
void dodaj_zapise() {
     elem x;
     int t_dolaska=0;
     int p[7];
     for(int i=0;i<7;i++) p[i]=0;
     for(int i=0;i<n;i++) {
             x=FrontQ(q);
             t_dolaska+=x.a;
             p[x.c]++;
             cout<<endl;
             switch(x.c) {
                 case 1:cout<<"Umirovljenik je dosao "<<t_dolaska<<" sek nakon otvaranja.\n";
                        cout<<"Prioritet: 1\n";break;
                 case 2:cout<<"Invalid je dosao "<<t_dolaska<<" sek nakon otvaranja.\n";
                        cout<<"Prioritet: 2\n";break;
                 case 3:cout<<"Trudnica je dosla "<<t_dolaska<<" sek nakon otvaranja.\n";
                        cout<<"Prioritet: 3\n";break;
                 case 4:cout<<"VIP klijent je dosao "<<t_dolaska<<" sek nakon otvaranja.\n";
                        cout<<"Prioritet: 4\n";break;
                 case 5:cout<<"Ostali klijent je dosao "<<t_dolaska<<" sek nakon otvaranja.\n";
                        cout<<"Prioritet: 5\n";break;
                 case 6:cout<<"Osoba koja nije klijent je dosla "<<t_dolaska<<" sek nakon otvaranja.\n";
                        cout<<"Prioritet: 6\n";break;
                         }
             cout<<"Ime i prezime: ";
             cin.ignore();
             cin.getline(x.pre_ime,35);
             
             x.datum.godina=1982+rand()%30; 
             x.datum.mjesec=rand()%12+1;
             if(x.datum.mjesec==2) 
                                   if(x.datum.godina%100!=0&&x.datum.godina%4==0) x.datum.dan=rand()%29+1;
                                   else if(x.datum.godina%400==0) x.datum.dan=rand()%29+1;
                                   else x.datum.dan=rand()%28 + 1;
             else x.datum.dan=rand()%31 + 1;
             
             cout<<"Datum rodjenja: "<<x.datum.dan<<"."<<x.datum.mjesec<<"."<<x.datum.godina<<endl;
             cout<<"Stanje na tekucem racunu: ";
             cin>>x.tekuci;
             cout<<"Stanje na deviznom racunu (GBP): ";
             cin>>x.devizni;
             
             DeQueueQ(q);
             EnQueueQ(x,q);
             EnQueueQ(x,salter);
             }
             
     cout<<endl<<endl;    
     for(int i=1;i<7;i++) 
             if(p[i]>0) 
                 while(p[i]!=0) {
                     x=FrontQ(salter);
                     if(x.c==i) {
                          cout<<"NA SALTERU: ";
                          switch(x.c) {
                              case 1: cout<<"Umirovljenik "<<x.pre_ime<<endl;break;
                              case 2: cout<<"Invalid "<<x.pre_ime<<endl;break;
                              case 3: cout<<"Trudnica "<<x.pre_ime<<endl;break;
                              case 4: cout<<"VIP klijent "<<x.pre_ime<<endl;break;
                              case 5: cout<<"Ostali klijent "<<x.pre_ime<<endl;break;
                              case 6: cout<<"Osoba koja nije klijent "<<x.pre_ime<<endl;break;
                              }                                                  
                          cout<<"TRANSAKCIJA: ";
                          switch(x.d) {
                              case 1: cout<<"Uplata\n";break;
                              case 2: cout<<"Isplata\n";break;
                              case 3: cout<<"Placanje racuna\n";break;
                              case 4: cout<<"Krediti\n";break;
                              }                                                 
                          cout<<"Trajanje transakcije: "<<x.b<<" sek\n";
                          if(x.devizni*9.259312>10000.00)cout<<"\nstanje deviznog racuna: "<<x.devizni<<" GBP / "<<x.devizni*9.259312<<" HRK"<<endl;
                          cout<<endl;
                          p[i]--;
                          DeQueueQ(salter);
                          }
                     else {
                          DeQueueQ(salter);
                          EnQueueQ(x,salter);
                          }
                 }
}

void placanje_racuna() {
     elem pom[placanje];
     int k=0;
     
     while(!IsEmptyQ(q)) {
                         elem x = FrontQ(q);
                         DeQueueQ(q);
                         if(x.d==3) {
                                    pom[k++]=x;
                                    n--;
                                    }
                         else EnQueueQ(x,salter);     
                         }   
     sort(pom,k);
     for(int i=0;i<k;i++) EnQueueQ(pom[i],brzi);
     
     cout<<"\nStanje brzog reda:\n-----------------------------\n";
     if(IsEmptyQ(brzi)) cout<<"Red je prazan.\n";
     else stanje_reda(brzi,placanje);
             
     InitQ(brzi);
     
     while(!IsEmptyQ(salter)) {
                              elem x = FrontQ(salter);
                              DeQueueQ(salter);
                              EnQueueQ(x,q);
                              }
     
     cout<<"\nStanje glavnog reda:\n-----------------------------\n";
     if(IsEmptyQ(q)) cout<<"Red je prazan.\n";
     else stanje_reda(q,n);
}     

void brisi() {
     int k=n;
     cout<<"OBRISANI:\n------------\n";
     for(int i=0;i<k;i++) {
             elem x = FrontQ(q);
             if((x.c==4&&x.datum.godina>1982&&x.d==1&&x.tekuci<100)||(x.c==1&&x.d==2&&x.tekuci>5000)) {                                    
                 switch(x.c) {
                    case 1: cout<<"UMIROVLJENIK "<<x.pre_ime<<"\nIsplata: "<<x.tekuci<<" HRK"<<endl;break;
                    case 4: cout<<"VIP KLIJENT "<<x.pre_ime<<"\nUplata: "<<x.tekuci<<" HRK"<<endl;break;
                    }
                 cout<<"tekuci racun: "<<x.tekuci<<" HRK\n\n";
                 DeQueueQ(q);
                 n--;
                 }
             else {
                  DeQueueQ(q);
                  EnQueueQ(x,q);
                  }                                                                 
             }
     cout<<"\nStanje reda:\n\n";
     stanje_reda(q,n);
}
     
void preslozi(red a) {
     elem x = FrontQ(a);
     DeQueueQ(a);
     if(!IsEmptyQ(a)) preslozi(a);
     EnQueueQ(x,a);
}
     
void brisi(int k,int post) {
     elem x = FrontQ(q);
     DeQueueQ(q);
     k--; 
     if(!IsEmptyQ(q)) brisi(k,post);
     if(k<=post) EnQueueQ(x,novi);
     else EnQueueQ(x,q);
}
     
void novi_salter() {
     InitQ(novi);
     float p = n*0.3;
     int post = int(p);
     brisi(n+1,post);
     preslozi(q);
     n = n-post;
     cout<<"Stanje novog reda:\n\n";
     stanje_reda(novi,post);
     cout<<"\nStanje glavnog reda:\n\n";
     stanje_reda(q,n);
}

int main() {
    int izbor;
    srand(time(0));
    
    InitQ(q);
    InitQ(salter);
    InitQ(brzi);
    InitQ(novi);
       
    generiranje();
    dodaj_zapise();
    
    do {
        cout<<"\n-------------------------------------------\n";
        cout<<"1. Otvaranje brzog reda za placanje racuna\n";    
        cout<<"2. Brisanje VIP klijenata <30 god, s uplatom <100 HRK i umirovljenika s isplatom >5000 HRK.\n";
        cout<<"3. Otvaranje novog saltera\n";
        cout<<"9. Izlaz\n";
        cout<<"-------------------------------------------\n";               
        cin>>izbor;  
        switch(izbor) {
           case 1: placanje_racuna();break;
           case 2: brisi();break;
           case 3: novi_salter();
           }
        }while(izbor!=9);
    system("pause");
    return 0;
}
    
